{
	"info": {
		"_postman_id": "2426ed53-d66c-4f2a-9fe2-ef3a64327f8a",
		"name": "SOS2021-05-attacks-stats",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Check empty list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"codigo de estado correcto\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"pm.test(\"numero de archivos devueltos\"  , function(){\r",
							"\r",
							"    pm.expect(pm.response.json().length).to.eql(0);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://sos2021-05.herokuapp.com/api/v1/attacks-stats",
					"protocol": "http",
					"host": [
						"sos2021-05",
						"herokuapp",
						"com"
					],
					"path": [
						"api",
						"v1",
						"attacks-stats"
					]
				},
				"description": "First of all. This request checks that there is no data prior to carrying out the checks. It should return an empty list."
			},
			"response": []
		},
		{
			"name": "Load inital data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"codigo de estado correcto\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://sos2021-05.herokuapp.com/api/v1/attacks-stats/loadInitialData",
					"protocol": "http",
					"host": [
						"sos2021-05",
						"herokuapp",
						"com"
					],
					"path": [
						"api",
						"v1",
						"attacks-stats",
						"loadInitialData"
					]
				},
				"description": "This request takes care of loading the resources into the item list. 7 resource corresponding to the attacks stats will be loaded."
			},
			"response": []
		},
		{
			"name": "Get all resources",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"codigo de estado correcto\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"pm.test(\"numero de archivos devueltos\"  , function(){\r",
							"\r",
							"    pm.expect(pm.response.json().length).to.eql(7);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://sos2021-05.herokuapp.com/api/v1/attacks-stats",
					"protocol": "http",
					"host": [
						"sos2021-05",
						"herokuapp",
						"com"
					],
					"path": [
						"api",
						"v1",
						"attacks-stats"
					]
				},
				"description": "This request takes care of returning all the existing resources in the list. For this specific case, it should return 7 JSON resources because they are the ones that were previously loaded."
			},
			"response": []
		},
		{
			"name": "Filtering to existing resource",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"codigo de estado correcto\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"pm.test(\"numero de archivos devueltos\"  , function(){\r",
							"\r",
							"    pm.expect(pm.response.json().length).to.eql(1);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://sos2021-05.herokuapp.com/api/v1/attacks-stats/Alabama/2019",
					"protocol": "http",
					"host": [
						"sos2021-05",
						"herokuapp",
						"com"
					],
					"path": [
						"api",
						"v1",
						"attacks-stats",
						"Alabama",
						"2019"
					]
				},
				"description": "This request is responsible for finding an item or set of items that share the \"state\" and \"year\" fields.\n\nThe search will be done using the url as follows: http://sos2021-05.herokuapp.com/api/v1/attacks-stats/STATE/YEAR\n\nIt will return the list of resources that contain the mentioned data.\n\nFor this specific case, since there is a data with those values, it must return ONE single resource"
			},
			"response": []
		},
		{
			"name": "Filtering to a non existing resource",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"codigo de estado correcto\", function(){\r",
							"    pm.response.to.have.status(404);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://sos2021-05.herokuapp.com/api/v1/attacks-stats/Michigan/2019",
					"protocol": "http",
					"host": [
						"sos2021-05",
						"herokuapp",
						"com"
					],
					"path": [
						"api",
						"v1",
						"attacks-stats",
						"Michigan",
						"2019"
					]
				},
				"description": "It works exactly the same as the previous request.\n\nFor this specific case, since there is not a data with those values, it must return a 404 error code(Not Found)"
			},
			"response": []
		},
		{
			"name": "Post a new resource x",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"codigo de estado correcto\", function(){\r",
							"    pm.response.to.have.status(201);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"state\": \"Michigan\",\r\n\"year\": \"2019\",\r\n\"sex_male\": \"100\",\r\n\"sex_female\": \"20\",\r\n\"sex_unknown\": \"10\",\r\n\"age_range_20_29\": \"44\",\r\n\"age_range_30_39\": \"14\",\r\n\"age_range_other\": \"85\",\r\n\"type_of_attack_personal_weapons\": \"38\",\r\n\"type_of_attack_gun\": \"20\",\r\n\"type_of_attack_knife\": \"8\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://sos2021-05.herokuapp.com/api/v1/attacks-stats",
					"protocol": "http",
					"host": [
						"sos2021-05",
						"herokuapp",
						"com"
					],
					"path": [
						"api",
						"v1",
						"attacks-stats"
					]
				},
				"description": "This method allows adding a new resource to the list from the body of the request.\n\nIt should be noted that there cannot be two resources with the same value in the \"state\" and  \"year\" fields. If there is, it would throw an error code 409 (Conflict).\n\nIn case of the body format wrong. It would throw an error code 400 (Bad Request).\n\nFor this specific case, it will create the object without problems and return a code of 201."
			},
			"response": []
		},
		{
			"name": "Post the same resource",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"codigo de estado correcto\", function(){\r",
							"    pm.response.to.have.status(409);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"state\": \"Michigan\",\r\n\"year\": \"2019\",\r\n\"sex_male\": \"100\",\r\n\"sex_female\": \"20\",\r\n\"sex_unknown\": \"10\",\r\n\"age_range_20_29\": \"44\",\r\n\"age_range_30_39\": \"14\",\r\n\"age_range_other\": \"85\",\r\n\"type_of_attack_personal_weapons\": \"38\",\r\n\"type_of_attack_gun\": \"20\",\r\n\"type_of_attack_knife\": \"8\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://sos2021-05.herokuapp.com/api/v1/attacks-stats",
					"protocol": "http",
					"host": [
						"sos2021-05",
						"herokuapp",
						"com"
					],
					"path": [
						"api",
						"v1",
						"attacks-stats"
					]
				},
				"description": "This method allows adding a new resource to the list from the body of the request.\n\nIt should be noted that there cannot be two resources with the same value in the \"state\" and \"year\" fields. If there is, it would throw an error code 409 (Conflict).\n\nFor this specific case, it will not be possible to add the new data since there is one that shares the same values. Therefore the addition will be discarded and will return an error code 409 (Conflict)"
			},
			"response": []
		},
		{
			"name": "Post a new resource with wrong body",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"codigo de estado correcto\", function(){\r",
							"    pm.response.to.have.status(400);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"state\": \"Michigan\",\r\n\"year\": \"2018\",\r\n\"sex_male\": \"100\",\r\n\"sex_female\": \"18\",\r\n\"sex_unknown\": \"14\",\r\n\"age-range-20-29\": \"44\",\r\n\"age-range-30-39\": \"14\",\r\n\"age-range-other\": \"85\",\r\n\"type-of-attack-personal-weapons\": \"38\",\r\n\"type-of-attack-gun\": \"20\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://sos2021-05.herokuapp.com/api/v1/attacks-stats",
					"protocol": "http",
					"host": [
						"sos2021-05",
						"herokuapp",
						"com"
					],
					"path": [
						"api",
						"v1",
						"attacks-stats"
					]
				},
				"description": "It acts the same as the previous requests. Demonstrates operation in case of \"Bad Request\"\n\nFor this specific case, it will not be possible to add the new data because the body format is wrong. It would throw an error code 400 (Bad Request)."
			},
			"response": []
		},
		{
			"name": "Post to a method",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"codigo de estado correcto\", function(){\r",
							"    pm.response.to.have.status(405);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://sos2021-05.herokuapp.com/api/v1/attacks-stats/Alabama/2019",
					"protocol": "http",
					"host": [
						"sos2021-05",
						"herokuapp",
						"com"
					],
					"path": [
						"api",
						"v1",
						"attacks-stats",
						"Alabama",
						"2019"
					]
				},
				"description": "This is one of the prohibited methods since you cannot do a POST within a specific resource.\n\nAny such request will instantly throw a 405 (Method Not Allowed) error."
			},
			"response": []
		},
		{
			"name": "Delete the resource x",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"codigo de estado correcto\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://sos2021-05.herokuapp.com/api/v1/attacks-stats/Michigan/2019",
					"protocol": "http",
					"host": [
						"sos2021-05",
						"herokuapp",
						"com"
					],
					"path": [
						"api",
						"v1",
						"attacks-stats",
						"Michigan",
						"2019"
					]
				},
				"description": "This request allows us to delete a specific resource from the list of resources.\n\nThe search will be done using the url as follows: http://sos2021-05.herokuapp.com/api/v1/attacks-stats/STATE/YEAR\n\nIf the resource is on the list, it will be removed successfully. If it is not in the list, a 404 (Not Found) error code should be returned.\n\nFor this specific case, you will find and delete the resource."
			},
			"response": []
		},
		{
			"name": "Delete the same resource x",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"codigo de estado correcto\", function(){\r",
							"    pm.response.to.have.status(404);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://sos2021-05.herokuapp.com/api/v1/attacks-stats/Michigan/2019",
					"protocol": "http",
					"host": [
						"sos2021-05",
						"herokuapp",
						"com"
					],
					"path": [
						"api",
						"v1",
						"attacks-stats",
						"Michigan",
						"2019"
					]
				},
				"description": "It works exactly the same as the previous one.\n\nIn this case, the resource will not be found so it will return a 404 error."
			},
			"response": []
		},
		{
			"name": "Update resource list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"codigo de estado correcto\", function(){\r",
							"    pm.response.to.have.status(405);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://sos2021-05.herokuapp.com/api/v1/attacks-stats",
					"protocol": "http",
					"host": [
						"sos2021-05",
						"herokuapp",
						"com"
					],
					"path": [
						"api",
						"v1",
						"attacks-stats"
					]
				},
				"description": "This is one of the prohibited methods since you cannot do a PUT within the entire resource list.\n\nAny such request will instantly throw a 405 (Method Not Allowed) error."
			},
			"response": []
		},
		{
			"name": "Update non-existing resource",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"codigo de estado correcto\", function(){\r",
							"    pm.response.to.have.status(404);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"state\": \"Alabama\",\r\n\"year\": \"2017\",\r\n\"sex_male\": \"50\",\r\n\"sex_female\": \"10\",\r\n\"sex_unknown\": \"14\",\r\n\"age_range_20_29\": \"44\",\r\n\"age_range_30_39\": \"14\",\r\n\"age_range_other\": \"85\",\r\n\"type_of_attack_personal_weapons\": \"38\",\r\n\"type_of_attack_gun\": \"20\",\r\n\"type_of_attack_knife\": \"8\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://sos2021-05.herokuapp.com/api/v1/attacks-stats/Alabama/2017",
					"protocol": "http",
					"host": [
						"sos2021-05",
						"herokuapp",
						"com"
					],
					"path": [
						"api",
						"v1",
						"attacks-stats",
						"Alabama",
						"2017"
					]
				},
				"description": "This method allows us to update the fields for a specific resource.\n\nThe search will be done using the url as follows: http://sos2021-05.herokuapp.com/api/v1/attacks-stats/STATE/YEAR\n\nIf this resource exists, the update will be successful. If this does not exist, it should return a 404 error since a resource that does not exist cannot be updated.\n\nIf the body format is wrong, it can't uptdate the resource and it should throw a 400 error(Bad Request)\n\nFor this specific case, the resource will not exist so it must return a 404 error."
			},
			"response": []
		},
		{
			"name": "Update to an existing resource",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"codigo de estado correcto\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"state\": \"Alabama\",\r\n\"year\": \"2019\",\r\n\"sex_male\": \"100\",\r\n\"sex_female\": \"50\",\r\n\"sex_unknown\": \"14\",\r\n\"age_range_20_29\": \"44\",\r\n\"age_range_30_39\": \"14\",\r\n\"age_range_other\": \"85\",\r\n\"type_of_attack_personal_weapons\": \"38\",\r\n\"type_of_attack_gun\": \"20\",\r\n\"type_of_attack_knife\": \"8\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://sos2021-05.herokuapp.com/api/v1/attacks-stats/Alabama/2019",
					"protocol": "http",
					"host": [
						"sos2021-05",
						"herokuapp",
						"com"
					],
					"path": [
						"api",
						"v1",
						"attacks-stats",
						"Alabama",
						"2019"
					]
				},
				"description": "It works exactly the same as the previous one.\n\nIn this case, the resource will be found so it will be updated and return a 200 code."
			},
			"response": []
		},
		{
			"name": "Update a resource changing State (Conflict Expected)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"codigo de estado correcto\", function(){\r",
							"    pm.response.to.have.status(409);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"state\": \"New York\",\r\n\"year\": \"2019\",\r\n\"sex_male\": \"150\",\r\n\"sex_female\": \"30\",\r\n\"sex_unknown\": \"14\",\r\n\"age_range_20_29\": \"44\",\r\n\"age_range_30_39\": \"14\",\r\n\"age_range_other\": \"85\",\r\n\"type_of_attack_personal_weapons\": \"38\",\r\n\"type_of_attack_gun\": \"20\",\r\n\"type_of_attack_knife\": \"8\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://sos2021-05.herokuapp.com/api/v1/attacks-stats/Alabama/2019",
					"protocol": "http",
					"host": [
						"sos2021-05",
						"herokuapp",
						"com"
					],
					"path": [
						"api",
						"v1",
						"attacks-stats",
						"Alabama",
						"2019"
					]
				},
				"description": "This request seeks to update a resource by changing one of its identifiers.\n\nThe result of this search is a conflict failure. It will return a 409 error."
			},
			"response": []
		},
		{
			"name": "Update to an existing resource with wrong body",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"codigo de estado correcto\", function(){\r",
							"    pm.response.to.have.status(400);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"state\": \"Alabama\",\r\n\"year\": \"2019\",\r\n\"sex-male\": \"150\",\r\n\"sex-female\": \"30\",\r\n\"sex-unknown\": \"14\",\r\n\"age-range-20-29\": \"44\",\r\n\"age-range-30-39\": \"14\",\r\n\"age-range-other\": \"85\",\r\n\"type-of-attack-personal-weapons\": \"38\",\r\n\"type-of-attack-gun\": \"20\",\r\n\"type-of-attack-knife\": \"8\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://sos2021-05.herokuapp.com/api/v1/attacks-stats/Alabama/2019",
					"protocol": "http",
					"host": [
						"sos2021-05",
						"herokuapp",
						"com"
					],
					"path": [
						"api",
						"v1",
						"attacks-stats",
						"Alabama",
						"2019"
					]
				},
				"description": "It works exactly the same as the previous one.\n\nIn this case, the resource will be found so it will be updated and return a 400 code because the body format is wrong."
			},
			"response": []
		},
		{
			"name": "Delete all the resources",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"codigo de estado correcto\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://sos2021-05.herokuapp.com/api/v1/attacks-stats",
					"protocol": "http",
					"host": [
						"sos2021-05",
						"herokuapp",
						"com"
					],
					"path": [
						"api",
						"v1",
						"attacks-stats"
					]
				},
				"description": "This method will take care of emptying the entire list of resources so that, when the collection is run again, there is no previous data."
			},
			"response": []
		}
	]
}